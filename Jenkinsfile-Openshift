
def projectName = "manager-1"
def appName = "${projectName}-app"
def version = "latest"
def dockerImageTag_app = "${appName}:${version}"
def mysqlName = "${projectName}-mysql"
def dockerImageTag_mysql = "${mysqlName}:${version}"

pipeline {
  agent any
  stages {
    stage('Build Maven') {
     agent {
         docker {
             image 'maven:3.8.1-openjdk-11'
             args '-v /root/.m2:/root/.m2'
         }
     }
     steps {
         sh 'mvn -B -DskipTests clean package'
         }
    }

    stage('Build') {
      agent any
      steps {
        sh "docker build -f Dockerfile-mysql -t ${dockerImageTag_mysql} ."
        sh "docker build -f Dockerfile-app-openshift -t ${dockerImageTag_app} ."
        sh "docker tag ${dockerImageTag_mysql} ${dockerImageTag_mysql}"
        sh "docker tag ${dockerImageTag_app} ${dockerImageTag_app}"
      }
    }

    stage('Test') {
      agent {
        docker {
          image 'maven:3.8.1'
        }
      }
      steps {
        sh "echo \"start testing\""
        sh 'mvn test'
      }
      post {
        always {
          junit 'target/surefire-reports/*.xml'
        }
      }
    }

    stage('Deploy Containers to OpenShift') {
      agent any
      steps {
        sh "oc login https://devopsapac31.conygre.com:8443 --username admin --password admin --insecure-skip-tls-verify=true"
        sh "oc project ${projectName} || oc new-project ${projectName}"
        sh "oc delete all --selector app=${appName} || echo 'Unable to delete all previous openshift resources'"
        sh "oc delete all --selector app=${mysqlName} || echo 'Unable to delete all previous openshift resources'"
        sh "oc new-app -e MYSQL_ROOT_PASSWORD=root ${dockerImageTag_mysql}"
        sh "sleep 20"
        sh "oc new-app -e spring_datasource_url=jdbc:mysql://${mysqlName}:3306/manager ${dockerImageTag_app}"
        sh "oc expose svc/${appName}"
        sh "oc status"
      }
    }
  }
}
